#!/usr/bin/env bash
#
# The equivalent of latexmk -pvc for ConTeXt

set -euo pipefail

filename=$1
args=("${@:2}")
if [[ -z $filename ]]; then
    echo >&2 "Usage: $(basename "$0") <filename[.tex]> [args...]"
    exit 1
fi

# ConTeXt always outputs artifacts to the current directory
input_basename=$(basename "$filename")
output_filename="${input_basename%.tex}.pdf"

# Any paths included in the file are also relative to the current directory.
# We'll try to detect environment files used in the main file and also recompile
# when those change. The overkill approach would be to recurisvely resolve these
# files, and to recreate the list of watched files whenever any of the files
# change, but this will do for our purposes.
mapfile -t environment_files < <(rg -r '$1.tex' '^\s*\\environment\s+(.+)$' "$filename")

context "$filename" "${args[@]}"
mimeopen "$output_filename" &
while inotifywait --event modify "$filename" "${environment_files[@]}"; do
    context "$filename" "${args[@]}" || true
done
