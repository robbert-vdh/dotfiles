#!/usr/bin/env bash
#
# For convenience we'll repack the `yabridge-<version>-{,-ubuntu-18.04}.tar.gz`
# and `yabridgectl-<version>.tar.gz` files generated by the CI into two
# archives. This script automates that for a file with the given input prefix.

prefix=$1

input_yabridge="$prefix.tar.gz"
input_yabridge_bionic="$prefix-ubuntu-18.04.tar.gz"
input_yabridgectl="${input_yabridge/yabridge/yabridgectl}"

if [[ ! -f $input_yabridge ]]; then
  echo "Missing '$input_yabridge'"
  exit 1
fi

if [[ ! -f $input_yabridge_bionic ]]; then
  echo "Missing '$input_yabridge_bionic'"
  exit 1
fi

if [[ ! -f $input_yabridgectl ]]; then
  echo "Missing '$input_yabridgectl'"
  exit 1
fi

working_dir=$(mktemp -d)

output_dir=$(realpath repackaged)
output_yabridge="$output_dir/$input_yabridge"
output_yabridge_bionic="$output_dir/$input_yabridge_bionic"

mkdir -p "$output_dir"

# Repack the regular yabridge and yabridgectl into one archive

tar -xaf "$input_yabridge" -C "$working_dir"
tar -xaf "$input_yabridgectl" -C "$working_dir"
mv "$working_dir/yabridgectl/yabridgectl" "$working_dir/yabridge/"

tar -caf "$output_yabridge" -C "$working_dir" yabridge
echo "Repacked into '$output_yabridge'"

# Repack the Ubuntu 18.04 version of yabridge and yabridgectl into one archive

rm -rf "$working_dir/{*,.*}"

tar -xaf "$input_yabridge_bionic" -C "$working_dir"
tar -xaf "$input_yabridgectl" -C "$working_dir"
mv "$working_dir/yabridgectl/yabridgectl" "$working_dir/yabridge/"

tar -caf "$output_yabridge_bionic" --owner=0 --group=0 -C "$working_dir" yabridge
echo "Repacked into '$output_yabridge_bionic'"

rm -rf "$working_dir"
