#!/usr/bin/env bash
#
# Some applications like to spawn high priority realtime threads. This can cause
# latency spikes during DAW usage. To prevent this, this script will set those
# threads to `SCHED_OTHER` and revoke their permissions to use realtime
# scheduling. (although they could still use rtkit if that's enabled)

set -euo pipefail

thread_blacklist_re='^(webrtc_audio_mo|InotifyEventThr|AudioIPC Callba)$'
process_blacklist_re='^(/usr/bin/telegram-desktop|/usr/lib/(firefox|signal-|thunderbird))'

# To make it easier to see what's going on and which threads we're going to
# reschedule, we'll print all realtime threads with their thread names and the
# first part of their command, and we'll mark the threads we're going to
# reschedule. Excluding pid 2 and all children of that will hide the kernel
# threads since we don't want to mess with those.
realtime_threads=$(ps Hah --ppid 2 -p 2 --deselect -o rtprio:30,tid:30,user:30,comm:30,command |
    # HACK: Since thread names can contain spaces and ps doesn't have a way to
    #       specify a delimiter, we'll hack around this a bit by making every
    #       every column fixed width and then manually adding tabs. This would
    #       have been neater with some proper parsing, but, oh well...
    #       We'll also truncate the last column for readability's sake.
    sed -E 's/^(.{30}) /\1\t/;
            s/(\t.{30}) /\1\t/;
            s/(\t.{30}) /\1\t/;
            s/(\t.{30}) /\1\t/;
            s/  +//g;
            s/(\t[^ ]+)( [^\t]+)?$/\1/' |
    awk -F$'\t' '($1 > 0) {
                    if ($4 ~ THREAD_RE || $5 ~ PROCESS_RE) { printf "x\t" } else { printf " \t" }
                    print $1 "\t" $2 "\t" $3 "\t" $4 "\t" $5;
                  }' THREAD_RE="$thread_blacklist_re" PROCESS_RE="$process_blacklist_re" |
    column -ts$'\t')
need_rescheduling=$(echo "$realtime_threads" | awk '$1 == "x" { print $3 }')

echo "$realtime_threads"

# A process could keep spawning new realtime threads using rtkit. If that's the
# case, then disabling rtkit is the only solution. This can be done with:
#
# sudo systemctl mask --now rtkit-daemon.service
if systemctl is-active --quiet rtkit-daemon.service; then
    echo -e "\nNotice: rtkit is currently running, consider disabling it if new realtime processes keep popping up"
fi

if [[ -z $need_rescheduling ]]; then
    echo -e "\nNothing to do here, modify the blacklists if needed."
else
    echo -e "\nSetting all marked threads to SCHED_OTHER with RLIMIT_RTPRIO=0..."
    echo "$need_rescheduling" | sudo xargs --no-run-if-empty -n1 prlimit --rtprio=0 -p
    echo "$need_rescheduling" | sudo xargs --no-run-if-empty -n1 chrt -po 0
fi
