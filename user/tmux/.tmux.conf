# I can't configure my lgoin shell on my work machine, so I'll configure tmux to
# always use fish instead
set -g default-command /usr/bin/fish

# Mouse support
set-option -g mouse on
set -g @scroll-speed-num-lines-per-scroll "1"

# Synchronize titles
set -g set-titles on
set -g set-titles-string "#S / #W"
set -g focus-events on
setw -g aggressive-resize on

# Improve colors
set -g default-terminal 'xterm-256color'
set -ga terminal-overrides ',term:Tc'

# Increase scrollback buffer size
set -g history-limit 10000

# Use C-a as a prefix
unbind C-b
set -g prefix C-a
set -sg escape-time 2
bind C-a send-prefix

# Start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

#
# Theme
# Stolen from http://ix.io/V5C
#

# Panes
set -g pane-border-style fg=colour0
set -g pane-active-border-style fg=colour238

# Toggle statusbar
bind-key b set-option status

# Status line
set -g status-justify left
set -g status-style bg=default,fg=default
set -g status-interval 2

# Messaging
set -g message-style fg=black
set -g message-style bg=yellow
set -g message-command-style fg=blue,bg=black
set -g automatic-rename on

# Window mode
setw -g mode-style bg=colour6,fg=colour0

# Colors
setw -g window-status-format "#[fg=colour3] •#[fg=colour8] #W "
setw -g window-status-current-format "#[fg=colour2] •#[fg=colour7] #W "
setw -g window-status-current-style dim
set -g status-position bottom
set -g status-justify centre
set -g status-left "  #[fg=colour3]• #[fg=colour2]• #[fg=colour4]•"
set -g status-right " #[fg=colour4] •#[fg=colour8] #S  "

#
# Key bindings
#

# Act more like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Use <C-h> and <C-l> to cycle through panes
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Open splits in the same directory
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

# Send a pane to a window
bind-key @ command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Swap the first window and the selected window
bind T swap-pane -dt 1

# Reload ~/.tmux.conf using <Prefix r>
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
